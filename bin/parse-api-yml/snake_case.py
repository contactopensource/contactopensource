"""
Snake case. This code is generated by Claude.
"""

import re

def snake_case(text):
    """
    Snake case conversion that handles multiple scenarios:
    - camelCase -> camel_case
    - PascalCase -> pascal_case
    - kebab-case -> kebab_case
    - spaces -> underscores
    - multiple separators -> single underscore
    - numbers
    - acronyms
    - special characters
    """
    if not text:
        return text

    # Replace non-alphanumeric characters (except underscores) with underscores
    text = re.sub(r'[^a-zA-Z0-9_]', '_', text)

    # Handle transitions from lowercase/numbers to uppercase
    text = re.sub(r'([a-z0-9])([A-Z])', r'\1_\2', text)

    # Handle transitions from multiple uppercase to lowercase (for acronyms)
    text = re.sub(r'([A-Z]+)([A-Z][a-z])', r'\1_\2', text)

    # Clean up multiple consecutive underscores
    text = re.sub(r'_+', '_', text)

    # Remove leading and trailing underscores
    text = text.strip('_')

    # Convert to lowercase
    return text.lower()

# Test function to demonstrate all versions
def test_snake_case_functions():
    """Test the snake case functions with various inputs."""
    test_cases = [
        "camelCase",
        "PascalCase",
        "snake_case",
        "kebab-case",
        "UPPER_CASE",
        "mixedUP_Case",
        "XMLHttpRequest",
        "parseHTML5",
        "iPhone6Plus",
        "get User Name",
        "getUserName()",
        "user-profile-settings",
        "API_KEY_CONFIG",
        "simpleCase",
        "HTTPSConnection",
        "parseXMLFromURL",
        ""
    ]

    for test in test_cases:
        print(f"'{test}'".ljust(20), end="")
        try:
            result = snake_case(test)
            print(f"'{result}'".ljust(15), end="")
        except Exception as e:
            print(f"Error".ljust(15), end="")
        print()

# Example usage
if __name__ == "__main__":
    test_cases = [
        "camelCase",
        "PascalCase",
        "snake_case",
        "kebab-case",
        "UPPER_CASE",
        "mixedUP_Case",
        "XMLHttpRequest",
        "parseHTML5",
        "iPhone6Plus",
        "get User Name",
        "getUserName()",
        "user-profile-settings",
        "API_KEY_CONFIG",
        "simpleCase",
        "HTTPSConnection",
        "parseXMLFromURL",
        ""
    ]
    print("Examples:")
    for x in test_cases:
        print(f"{x} -> {snake_case(x)}")
